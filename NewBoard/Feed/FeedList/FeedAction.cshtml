@model FeedVM

<ul name="feed-action" class="dropdown-menu">
    <li th-is-visible="Model.IsSubscribed">
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "Unsubscribe", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            Se desabonner
        </a>
    </li>
    <li th-is-visible="!Model.IsSubscribed">
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "Subscribe", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            S'abonner
        </a>
    </li>
    <li th-is-visible="!Model.IsSubscribed">
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "StopDisplay", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            Ne plus afficher
        </a>
    </li>
    <li>
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "Report", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            Signaler le contenu
        </a>
    </li>
    <li>
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "GetEdit", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            Modifier
        </a>
    </li>
    <li>
        <a href="@Url.NewsBoardUrlHelper().Action("Feed", "FeedList", "Refresh", new {feedId = Model.Id })"
           type="button" ns-action-type="simpleGetAction">
            Rafraichir
        </a>
    </li>
</ul>